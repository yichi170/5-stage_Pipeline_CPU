$date
	Mon May 17 11:49:03 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench $end
$var reg 1 ! clk $end
$var reg 1 " rst_n $end
$var integer 32 # fp_w [31:0] $end
$scope module CPU $end
$var wire 1 $ IFID_flush $end
$var wire 32 % Imm_0 [31:0] $end
$var wire 32 & Imm_4 [31:0] $end
$var wire 24 ' Mux_control_notuse_i [23:0] $end
$var wire 1 ( PCSrc $end
$var wire 1 ! clk_i $end
$var wire 1 " rst_i $end
$var wire 1 ) zero $end
$var wire 32 * pc_o [31:0] $end
$var wire 32 + pc_i [31:0] $end
$var wire 32 , pc_add_immediate [31:0] $end
$var wire 32 - pc_add4 [31:0] $end
$var wire 1 . ovf $end
$var wire 1 / cout $end
$var wire 1 0 control_output_select $end
$var wire 1 1 branch_zero $end
$var wire 2 2 WriteBack [1:0] $end
$var wire 32 3 SL1_o [31:0] $end
$var wire 1 4 RegWrite $end
$var wire 32 5 RTdata_o [31:0] $end
$var wire 32 6 RSdata_o [31:0] $end
$var wire 1 7 PC_write $end
$var wire 8 8 Mux_control_o [7:0] $end
$var wire 24 9 Mux_control_notuse_o [23:0] $end
$var wire 32 : MuxMemtoReg_o [31:0] $end
$var wire 32 ; MuxALUSrc_o [31:0] $end
$var wire 1 < MemWrite $end
$var wire 1 = MemRead $end
$var wire 32 > MEMWB_pc_add4_o [31:0] $end
$var wire 5 ? MEMWB_instr_11_7_o [4:0] $end
$var wire 3 @ MEMWB_WB_o [2:0] $end
$var wire 32 A MEMWB_DM_o [31:0] $end
$var wire 32 B MEMWB_ALUresult_o [31:0] $end
$var wire 1 C Jump $end
$var wire 32 D Imm_Gen_o [31:0] $end
$var wire 32 E IF_instr [31:0] $end
$var wire 1 F IFID_write $end
$var wire 32 G IFID_pc_o [31:0] $end
$var wire 32 H IFID_pc_add4_o [31:0] $end
$var wire 32 I IFID_instr_o [31:0] $end
$var wire 32 J IDEXE_pc_add4_o [31:0] $end
$var wire 32 K IDEXE_instr_o [31:0] $end
$var wire 4 L IDEXE_instr_30_14_12_o [3:0] $end
$var wire 5 M IDEXE_instr_11_7_o [4:0] $end
$var wire 3 N IDEXE_WB_o [2:0] $end
$var wire 32 O IDEXE_RTdata_o [31:0] $end
$var wire 32 P IDEXE_RSdata_o [31:0] $end
$var wire 2 Q IDEXE_Mem_o [1:0] $end
$var wire 32 R IDEXE_ImmGen_o [31:0] $end
$var wire 3 S IDEXE_Exe_o [2:0] $end
$var wire 1 T EXEMEM_zero_o $end
$var wire 32 U EXEMEM_pc_add4_o [31:0] $end
$var wire 32 V EXEMEM_instr_o [31:0] $end
$var wire 5 W EXEMEM_instr_11_7_o [4:0] $end
$var wire 3 X EXEMEM_WB_o [2:0] $end
$var wire 32 Y EXEMEM_RTdata_o [31:0] $end
$var wire 2 Z EXEMEM_Mem_o [1:0] $end
$var wire 32 [ EXEMEM_ALUresult_o [31:0] $end
$var wire 32 \ DM_o [31:0] $end
$var wire 1 ] Branch $end
$var wire 32 ^ ALUresult [31:0] $end
$var wire 4 _ ALU_Ctrl_o [3:0] $end
$var wire 32 ` ALUSrc2_o [31:0] $end
$var wire 32 a ALUSrc1_o [31:0] $end
$var wire 1 b ALUSrc $end
$var wire 2 c ALUSelSrc2 [1:0] $end
$var wire 2 d ALUSelSrc1 [1:0] $end
$var wire 2 e ALUOp [1:0] $end
$scope module ALU_Ctrl $end
$var wire 2 f ALUOp [1:0] $end
$var wire 4 g ALU_Ctrl_o [3:0] $end
$var wire 4 h instr [3:0] $end
$var wire 3 i func3 [2:0] $end
$var reg 4 j ALU_Ctrl_o_reg [3:0] $end
$upscope $end
$scope module Branch_Adder $end
$var wire 32 k sum_o [31:0] $end
$var wire 32 l src2_i [31:0] $end
$var wire 32 m src1_i [31:0] $end
$upscope $end
$scope module Check_Equal $end
$var wire 1 " rst_n $end
$var wire 32 n src2 [31:0] $end
$var wire 32 o src1 [31:0] $end
$var reg 32 p a [31:0] $end
$var reg 32 q b [31:0] $end
$var reg 32 r result [31:0] $end
$var reg 1 1 zero $end
$upscope $end
$scope module Data_Memory $end
$var wire 1 s MemRead_i $end
$var wire 1 t MemWrite_i $end
$var wire 1 ! clk_i $end
$var wire 32 u data_o [31:0] $end
$var wire 32 v data_i [31:0] $end
$var wire 32 w addr_i [31:0] $end
$var integer 32 x i [31:0] $end
$upscope $end
$scope module Decoder $end
$var wire 7 y opcode [6:0] $end
$var wire 32 z instr_i [31:0] $end
$var wire 3 { funct3 [2:0] $end
$var wire 2 | WriteBack [1:0] $end
$var wire 1 4 RegWrite $end
$var wire 1 < MemWrite $end
$var wire 1 = MemRead $end
$var wire 1 C Jump $end
$var wire 3 } Instr_field [2:0] $end
$var wire 10 ~ Ctrl_o [9:0] $end
$var wire 1 ] Branch $end
$var wire 1 b ALUSrc $end
$var wire 2 !" ALUOp [1:0] $end
$upscope $end
$scope module EXEtoMEM $end
$var wire 1 ! clk_i $end
$var wire 1 " rst_i $end
$var wire 1 ) zero_i $end
$var wire 32 "" rtdata_i [31:0] $end
$var wire 32 #" pc_add4_i [31:0] $end
$var wire 32 $" instr_i [31:0] $end
$var wire 32 %" alu_ans_i [31:0] $end
$var wire 5 &" WBreg_i [4:0] $end
$var wire 3 '" WB_i [2:0] $end
$var wire 2 (" Mem_i [1:0] $end
$var reg 2 )" Mem_o [1:0] $end
$var reg 3 *" WB_o [2:0] $end
$var reg 5 +" WBreg_o [4:0] $end
$var reg 32 ," alu_ans_o [31:0] $end
$var reg 32 -" instr_o [31:0] $end
$var reg 32 ." pc_add4_o [31:0] $end
$var reg 32 /" rtdata_o [31:0] $end
$var reg 1 T zero_o $end
$upscope $end
$scope module FWUnit $end
$var wire 5 0" EXE_instr19_15 [4:0] $end
$var wire 5 1" EXE_instr24_20 [4:0] $end
$var wire 3 2" MEM_WBControl [2:0] $end
$var wire 5 3" MEM_instr11_7 [4:0] $end
$var wire 2 4" src1_sel_o [1:0] $end
$var wire 2 5" src2_sel_o [1:0] $end
$var wire 5 6" WB_instr11_7 [4:0] $end
$var wire 3 7" WB_Control [2:0] $end
$var wire 1 8" Regwrite $end
$var wire 1 9" MEM_Regwrite $end
$var reg 2 :" sel1_o_reg [1:0] $end
$var reg 2 ;" sel2_o_reg [1:0] $end
$upscope $end
$scope module Hazard_detection_obj $end
$var wire 1 <" IDEXE_memRead $end
$var wire 5 =" IFID_regRs [4:0] $end
$var wire 5 >" IFID_regRt [4:0] $end
$var wire 1 F IFID_write $end
$var wire 1 7 PC_write $end
$var wire 1 0 control_output_select $end
$var wire 5 ?" IDEXE_regRd [4:0] $end
$var reg 1 0 COS_reg $end
$var reg 1 @" IFIDW_reg $end
$var reg 1 A" PCW_reg $end
$upscope $end
$scope module IDtoEXE $end
$var wire 3 B" Exe_i [2:0] $end
$var wire 2 C" Mem_i [1:0] $end
$var wire 3 D" WB_i [2:0] $end
$var wire 5 E" WBreg_i [4:0] $end
$var wire 4 F" alu_ctrl_instr [3:0] $end
$var wire 1 ! clk_i $end
$var wire 1 " rst_i $end
$var wire 32 G" pc_add4_i [31:0] $end
$var wire 32 H" instr_i [31:0] $end
$var wire 32 I" immgen_i [31:0] $end
$var wire 32 J" data2_i [31:0] $end
$var wire 32 K" data1_i [31:0] $end
$var reg 3 L" Exe_o [2:0] $end
$var reg 2 M" Mem_o [1:0] $end
$var reg 3 N" WB_o [2:0] $end
$var reg 5 O" WBreg_o [4:0] $end
$var reg 4 P" alu_ctrl_input [3:0] $end
$var reg 32 Q" data1_o [31:0] $end
$var reg 32 R" data2_o [31:0] $end
$var reg 32 S" immgen_o [31:0] $end
$var reg 32 T" instr_o [31:0] $end
$var reg 32 U" pc_add4_o [31:0] $end
$upscope $end
$scope module IFtoID $end
$var wire 1 F IFID_write $end
$var wire 1 ! clk_i $end
$var wire 1 $ flush $end
$var wire 1 " rst_i $end
$var wire 32 V" pc_add4_i [31:0] $end
$var wire 32 W" instr_i [31:0] $end
$var wire 32 X" address_i [31:0] $end
$var reg 32 Y" address_o [31:0] $end
$var reg 32 Z" instr_o [31:0] $end
$var reg 32 [" pc_add4_o [31:0] $end
$upscope $end
$scope module IM $end
$var wire 32 \" instr_o [31:0] $end
$var wire 32 ]" addr_i [31:0] $end
$var integer 32 ^" i [31:0] $end
$upscope $end
$scope module ImmGen $end
$var wire 32 _" instr_i [31:0] $end
$var wire 7 `" opcode [6:0] $end
$var wire 3 a" func3 [2:0] $end
$var wire 32 b" Imm_Gen_o [31:0] $end
$var reg 32 c" Imm_Gen_o_reg [31:0] $end
$scope begin Btype $end
$upscope $end
$scope begin Itype $end
$upscope $end
$scope begin Jtype $end
$upscope $end
$scope begin Stype $end
$upscope $end
$upscope $end
$scope module MEMtoWB $end
$var wire 32 d" DM_i [31:0] $end
$var wire 3 e" WB_i [2:0] $end
$var wire 5 f" WBreg_i [4:0] $end
$var wire 32 g" alu_ans_i [31:0] $end
$var wire 1 ! clk_i $end
$var wire 32 h" pc_add4_i [31:0] $end
$var wire 1 " rst_i $end
$var reg 32 i" DM_o [31:0] $end
$var reg 3 j" WB_o [2:0] $end
$var reg 5 k" WBreg_o [4:0] $end
$var reg 32 l" alu_ans_o [31:0] $end
$var reg 32 m" pc_add4_o [31:0] $end
$upscope $end
$scope module MUX_ALU_src1 $end
$var wire 32 n" data0_i [31:0] $end
$var wire 32 o" data2_i [31:0] $end
$var wire 2 p" select_i [1:0] $end
$var wire 32 q" data_o [31:0] $end
$var wire 32 r" data1_i [31:0] $end
$upscope $end
$scope module MUX_ALU_src2 $end
$var wire 32 s" data0_i [31:0] $end
$var wire 32 t" data2_i [31:0] $end
$var wire 2 u" select_i [1:0] $end
$var wire 32 v" data_o [31:0] $end
$var wire 32 w" data1_i [31:0] $end
$upscope $end
$scope module Mux_ALUSrc $end
$var wire 32 x" data0_i [31:0] $end
$var wire 32 y" data1_i [31:0] $end
$var wire 1 z" select_i $end
$var wire 32 {" data_o [31:0] $end
$upscope $end
$scope module Mux_MemtoReg $end
$var wire 32 |" data0_i [31:0] $end
$var wire 32 }" data1_i [31:0] $end
$var wire 32 ~" data2_i [31:0] $end
$var wire 2 !# select_i [1:0] $end
$var wire 32 "# data_o [31:0] $end
$upscope $end
$scope module Mux_PCSrc $end
$var wire 32 ## data1_i [31:0] $end
$var wire 1 ( select_i $end
$var wire 32 $# data_o [31:0] $end
$var wire 32 %# data0_i [31:0] $end
$upscope $end
$scope module Mux_control $end
$var wire 32 &# data0_i [31:0] $end
$var wire 32 '# data1_i [31:0] $end
$var wire 1 0 select_i $end
$var wire 32 (# data_o [31:0] $end
$upscope $end
$scope module PC $end
$var wire 1 7 PCWrite $end
$var wire 1 ! clk_i $end
$var wire 32 )# pc_i [31:0] $end
$var wire 1 " rst_i $end
$var reg 32 *# pc_o [31:0] $end
$upscope $end
$scope module PC_plus_4_Adder $end
$var wire 32 +# src1_i [31:0] $end
$var wire 32 ,# src2_i [31:0] $end
$var wire 32 -# sum_o [31:0] $end
$upscope $end
$scope module RF $end
$var wire 5 .# RDaddr_i [4:0] $end
$var wire 32 /# RDdata_i [31:0] $end
$var wire 5 0# RSaddr_i [4:0] $end
$var wire 32 1# RSdata_o [31:0] $end
$var wire 5 2# RTaddr_i [4:0] $end
$var wire 32 3# RTdata_o [31:0] $end
$var wire 1 4# RegWrite_i $end
$var wire 1 ! clk_i $end
$var wire 1 " rst_i $end
$upscope $end
$scope module SL1 $end
$var wire 32 5# data_i [31:0] $end
$var wire 32 6# data_o [31:0] $end
$upscope $end
$scope module alu $end
$var wire 4 7# ALU_control [3:0] $end
$var wire 1 " rst_n $end
$var wire 32 8# src1 [31:0] $end
$var wire 32 9# src2 [31:0] $end
$var reg 32 :# a [31:0] $end
$var reg 32 ;# b [31:0] $end
$var reg 1 / cout $end
$var reg 1 . overflow $end
$var reg 32 <# result [31:0] $end
$var reg 1 ) zero $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 <#
bx ;#
bx :#
bx 9#
bx 8#
bx 7#
bx0 6#
bx 5#
x4#
bx 3#
bx 2#
bx 1#
bx 0#
bx /#
bx .#
bx -#
b100 ,#
bx +#
bx *#
bx )#
bx (#
b0 '#
bzxxxxxxxx &#
bx %#
bx $#
bx ##
bx "#
bx !#
bx ~"
bx }"
bx |"
bx {"
xz"
bx y"
bx x"
bx w"
bx v"
bx u"
bx t"
bx s"
bx r"
bx q"
bx p"
bx o"
bx n"
bx m"
bx l"
bx k"
bx j"
bx i"
bx h"
bx g"
bx f"
bx e"
bx d"
bx c"
bx b"
bx a"
bx `"
bx _"
b100000 ^"
bx ]"
bx \"
bx ["
bx Z"
bx Y"
bx X"
bx W"
bx V"
bx U"
bx T"
bx S"
bx R"
bx Q"
bx P"
bx O"
bx N"
bx M"
bx L"
bx K"
bx J"
bx I"
bx H"
bx G"
bx F"
bx E"
bx D"
bx C"
bx B"
xA"
x@"
bx ?"
bx >"
bx ="
x<"
bx ;"
bx :"
x9"
x8"
bx 7"
bx 6"
bx 5"
bx 4"
bx 3"
bx 2"
bx 1"
bx 0"
bx /"
bx ."
bx -"
bx ,"
bx +"
bx *"
bx )"
bx ("
bx '"
bx &"
b0 %"
bx $"
bx #"
bx ""
bx !"
bx ~
bx }
bx |
bx {
bx z
bx y
b10000000 x
bx w
bx v
bx u
xt
xs
bx r
bx q
bx p
bx o
bx n
bx m
bx0 l
bx k
bx j
bx i
bx h
bx g
bx f
bx e
bx d
bx c
xb
bx a
bx `
bx _
b0 ^
x]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
xT
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
xF
bx E
bx D
xC
bx B
bx A
bx @
bx ?
bx >
x=
x<
bx ;
bx :
bx 9
bx 8
x7
bx 6
bx 5
x4
bx0 3
bx 2
01
x0
0/
0.
bx -
bx ,
bx +
bx *
1)
x(
bz '
b100 &
b0 %
z$
b10000000000000000000000000000011 #
0"
0!
$end
#25000
b111 B"
1b
14
b11 e
b11 !"
0(
0C
0<
0]
b100 D"
b0 C"
b11100100 8
b0 2
b0 |
bz11100100 &#
0=
b10100011 ~
b1 }
b100 +
b100 $#
b100 )#
bz 9
11
b0 r
b0 q
b0 p
b0 ,
b0 k
b0 ##
b0 3
b0 l
b0 6#
bz11100100 (#
b0 ;#
b0 :#
b0 `"
b0 a"
b0 {
b0 y
b0 E"
b0 F"
b0 5
b0 n
b0 J"
b0 3#
b0 2#
b0 6
b0 o
b0 K"
b0 1#
b0 0#
b0 >"
b0 ="
b0 D
b0 I"
b0 b"
b0 c"
b0 5#
00
1F
1@"
17
1A"
b0 i
b10 _
b10 g
b10 7#
b10 j
b0 ;
b0 {"
b0 9#
b0 `
b0 ""
b0 v"
b0 x"
b0 a
b0 q"
b0 8#
b0 f
0z"
0<"
b0 1"
b0 0"
b0 \
b0 u
b0 d"
0t
0s
09"
b0 c
b0 5"
b0 ;"
b0 u"
b0 d
b0 4"
b0 :"
b0 p"
b0 :
b0 r"
b0 w"
b0 "#
b0 /#
08"
b0 !#
04#
b100 -
b100 V"
b100 %#
b100 -#
b100000000000000011101111 E
b100000000000000011101111 W"
b100000000000000011101111 \"
b0 *
b0 X"
b0 ]"
b0 *#
b0 +#
b0 H
b0 G"
b0 ["
b0 I
b0 z
b0 H"
b0 Z"
b0 _"
b0 G
b0 m
b0 Y"
b0 J
b0 #"
b0 U"
b0 M
b0 &"
b0 ?"
b0 O"
b0 L
b0 h
b0 P"
b0 R
b0 S"
b0 y"
b0 O
b0 R"
b0 s"
b0 P
b0 Q"
b0 n"
b0 S
b0 L"
b0 Q
b0 ("
b0 M"
b0 N
b0 '"
b0 N"
b0 K
b0 $"
b0 T"
b0 U
b0 ."
b0 h"
b0 W
b0 +"
b0 3"
b0 f"
b0 Y
b0 v
b0 /"
b0 [
b0 w
b0 ,"
b0 g"
b0 o"
b0 t"
0T
b0 Z
b0 )"
b0 X
b0 *"
b0 2"
b0 e"
b0 V
b0 -"
b0 >
b0 m"
b0 ~"
b0 ?
b0 6"
b0 k"
b0 .#
b0 B
b0 l"
b0 }"
b0 A
b0 i"
b0 |"
b0 @
b0 7"
b0 j"
1!
#50000
0!
1"
#75000
1(
b110 D"
b0 B"
1C
b10 2
b10 |
b110 8
bz00000110 (#
0b
14
bz00000110 &#
b0 e
b0 !"
b1100100000 ~
b10000 ,
b10000 k
b10000 ##
b10000 3
b10000 l
b10000 6#
b100 }
b1000 D
b1000 I"
b1000 b"
b1000 c"
b1000 5#
b11 f
1z"
b1101111 `"
b1101111 y
b1 E"
b1000 2#
b1000 >"
b10000 +
b10000 $#
b10000 )#
1T
b111 S
b111 L"
b100 N
b100 '"
b100 N"
b100 H
b100 G"
b100 ["
b100000000000000011101111 I
b100000000000000011101111 z
b100000000000000011101111 H"
b100000000000000011101111 Z"
b100000000000000011101111 _"
b1000 -
b1000 V"
b1000 %#
b1000 -#
b10100100000001000010011 E
b10100100000001000010011 W"
b10100100000001000010011 \"
b100 *
b100 X"
b100 ]"
b100 *#
b100 +#
1!
#100000
0!
#125000
b100 D"
b111 B"
b11100100 8
0(
bz11100100 (#
0C
1b
b0 2
b0 |
bz11100100 &#
b11 e
b11 !"
b10100011 ~
b1 }
b1010 3
b1010 l
b1010 6#
b10 d
b10 4"
b10 :"
b10 p"
b10011 `"
b10011 y
b100 E"
b101 2#
b100 0#
b101 >"
b100 ="
b101 D
b101 I"
b101 b"
b101 c"
b101 5#
b10100 +
b10100 $#
b10100 )#
b0 f
0z"
b1000 1"
19"
b10100 -
b10100 V"
b10100 %#
b10100 -#
b0 E
b0 W"
b0 \"
b10000 *
b10000 X"
b10000 ]"
b10000 *#
b10000 +#
b1000 H
b1000 G"
b1000 ["
b10100100000001000010011 I
b10100100000001000010011 z
b10100100000001000010011 H"
b10100100000001000010011 Z"
b10100100000001000010011 _"
b1110 ,
b1110 k
b1110 ##
b100 G
b100 m
b100 Y"
b100 J
b100 #"
b100 U"
b1 M
b1 &"
b1 ?"
b1 O"
b1000 R
b1000 S"
b1000 y"
b0 S
b0 L"
b110 N
b110 '"
b110 N"
b100000000000000011101111 K
b100000000000000011101111 $"
b100000000000000011101111 T"
b100 X
b100 *"
b100 2"
b100 e"
1!
#150000
0!
#175000
0)
b101 ^
b101 %"
b101 <#
b101 ;#
b101 ;
b101 {"
b101 9#
b0 3
b0 l
b0 6#
18"
14#
b0 d
b0 4"
b0 :"
b0 p"
b11 f
1z"
b101 1"
b100 0"
b0 `"
b0 y
b0 E"
b0 2#
b0 0#
b0 >"
b0 ="
b0 D
b0 I"
b0 b"
b0 c"
b0 5#
b11000 +
b11000 $#
b11000 )#
b100 @
b100 7"
b100 j"
b100 U
b100 ."
b100 h"
b1 W
b1 +"
b1 3"
b1 f"
b110 X
b110 *"
b110 2"
b110 e"
b100000000000000011101111 V
b100000000000000011101111 -"
b1000 J
b1000 #"
b1000 U"
b100 M
b100 &"
b100 ?"
b100 O"
b101 R
b101 S"
b101 y"
b111 S
b111 L"
b100 N
b100 '"
b100 N"
b10100100000001000010011 K
b10100100000001000010011 $"
b10100100000001000010011 T"
b10100 H
b10100 G"
b10100 ["
b0 I
b0 z
b0 H"
b0 Z"
b0 _"
b10000 ,
b10000 k
b10000 ##
b10000 G
b10000 m
b10000 Y"
b11000 -
b11000 V"
b11000 %#
b11000 -#
b10100 *
b10100 X"
b10100 ]"
b10100 *#
b10100 +#
1!
#200000
0!
#225000
1)
b0 ^
b0 %"
b0 <#
b0 ;#
b0 :#
b0 a
b0 q"
b0 8#
b100 :
b100 r"
b100 w"
b100 "#
b100 /#
b11100 +
b11100 $#
b11100 )#
b0 ;
b0 {"
b0 9#
b0 1"
b0 0"
b0 d
b0 4"
b0 :"
b0 p"
b10 !#
b11100 -
b11100 V"
b11100 %#
b11100 -#
b11000 *
b11000 X"
b11000 ]"
b11000 *#
b11000 +#
b11000 H
b11000 G"
b11000 ["
b10100 ,
b10100 k
b10100 ##
b10100 G
b10100 m
b10100 Y"
b10100 J
b10100 #"
b10100 U"
b0 M
b0 &"
b0 ?"
b0 O"
b0 R
b0 S"
b0 y"
b0 K
b0 $"
b0 T"
b1000 U
b1000 ."
b1000 h"
b100 W
b100 +"
b100 3"
b100 f"
b101 [
b101 w
b101 ,"
b101 g"
b101 o"
b101 t"
0T
b100 X
b100 *"
b100 2"
b100 e"
b10100100000001000010011 V
b10100100000001000010011 -"
b100 >
b100 m"
b100 ~"
b1 ?
b1 6"
b1 k"
b1 .#
b110 @
b110 7"
b110 j"
1!
#250000
0!
#275000
b0 :
b0 r"
b0 w"
b0 "#
b0 /#
b0 !#
b10 c
b10 5"
b10 ;"
b10 u"
b10 d
b10 4"
b10 :"
b10 p"
b100000 +
b100000 $#
b100000 )#
b1000 >
b1000 m"
b1000 ~"
b100 ?
b100 6"
b100 k"
b100 .#
b101 B
b101 l"
b101 }"
b100 @
b100 7"
b100 j"
b10100 U
b10100 ."
b10100 h"
b0 W
b0 +"
b0 3"
b0 f"
b0 [
b0 w
b0 ,"
b0 g"
b0 o"
b0 t"
1T
b0 V
b0 -"
b11000 J
b11000 #"
b11000 U"
b11100 H
b11100 G"
b11100 ["
b11000 ,
b11000 k
b11000 ##
b11000 G
b11000 m
b11000 Y"
b100000 -
b100000 V"
b100000 %#
b100000 -#
b11100 *
b11100 X"
b11100 ]"
b11100 *#
b11100 +#
1!
#300000
0!
#325000
b100100 +
b100100 $#
b100100 )#
b100100 -
b100100 V"
b100100 %#
b100100 -#
b100000 *
b100000 X"
b100000 ]"
b100000 *#
b100000 +#
b100000 H
b100000 G"
b100000 ["
b11100 ,
b11100 k
b11100 ##
b11100 G
b11100 m
b11100 Y"
b11100 J
b11100 #"
b11100 U"
b11000 U
b11000 ."
b11000 h"
b10100 >
b10100 m"
b10100 ~"
b0 ?
b0 6"
b0 k"
b0 .#
b0 B
b0 l"
b0 }"
1!
#350000
0!
#375000
b101000 +
b101000 $#
b101000 )#
b11000 >
b11000 m"
b11000 ~"
b11100 U
b11100 ."
b11100 h"
b100000 J
b100000 #"
b100000 U"
b100100 H
b100100 G"
b100100 ["
b100000 ,
b100000 k
b100000 ##
b100000 G
b100000 m
b100000 Y"
b101000 -
b101000 V"
b101000 %#
b101000 -#
b100100 *
b100100 X"
b100100 ]"
b100100 *#
b100100 +#
1!
#400000
0!
#425000
b101100 +
b101100 $#
b101100 )#
b101100 -
b101100 V"
b101100 %#
b101100 -#
b101000 *
b101000 X"
b101000 ]"
b101000 *#
b101000 +#
b101000 H
b101000 G"
b101000 ["
b100100 ,
b100100 k
b100100 ##
b100100 G
b100100 m
b100100 Y"
b100100 J
b100100 #"
b100100 U"
b100000 U
b100000 ."
b100000 h"
b11100 >
b11100 m"
b11100 ~"
1!
#450000
0!
#475000
b110000 +
b110000 $#
b110000 )#
b100000 >
b100000 m"
b100000 ~"
b100100 U
b100100 ."
b100100 h"
b101000 J
b101000 #"
b101000 U"
b101100 H
b101100 G"
b101100 ["
b101000 ,
b101000 k
b101000 ##
b101000 G
b101000 m
b101000 Y"
b110000 -
b110000 V"
b110000 %#
b110000 -#
b101100 *
b101100 X"
b101100 ]"
b101100 *#
b101100 +#
1!
#500000
0!
#525000
b110100 +
b110100 $#
b110100 )#
b110100 -
b110100 V"
b110100 %#
b110100 -#
b110000 *
b110000 X"
b110000 ]"
b110000 *#
b110000 +#
b110000 H
b110000 G"
b110000 ["
b101100 ,
b101100 k
b101100 ##
b101100 G
b101100 m
b101100 Y"
b101100 J
b101100 #"
b101100 U"
b101000 U
b101000 ."
b101000 h"
b100100 >
b100100 m"
b100100 ~"
1!
#550000
0!
#575000
b111000 +
b111000 $#
b111000 )#
b101000 >
b101000 m"
b101000 ~"
b101100 U
b101100 ."
b101100 h"
b110000 J
b110000 #"
b110000 U"
b110100 H
b110100 G"
b110100 ["
b110000 ,
b110000 k
b110000 ##
b110000 G
b110000 m
b110000 Y"
b111000 -
b111000 V"
b111000 %#
b111000 -#
b110100 *
b110100 X"
b110100 ]"
b110100 *#
b110100 +#
1!
#600000
0!
#625000
b111100 +
b111100 $#
b111100 )#
b111100 -
b111100 V"
b111100 %#
b111100 -#
b111000 *
b111000 X"
b111000 ]"
b111000 *#
b111000 +#
b111000 H
b111000 G"
b111000 ["
b110100 ,
b110100 k
b110100 ##
b110100 G
b110100 m
b110100 Y"
b110100 J
b110100 #"
b110100 U"
b110000 U
b110000 ."
b110000 h"
b101100 >
b101100 m"
b101100 ~"
1!
#650000
0!
#675000
b1000000 +
b1000000 $#
b1000000 )#
b110000 >
b110000 m"
b110000 ~"
b110100 U
b110100 ."
b110100 h"
b111000 J
b111000 #"
b111000 U"
b111100 H
b111100 G"
b111100 ["
b111000 ,
b111000 k
b111000 ##
b111000 G
b111000 m
b111000 Y"
b1000000 -
b1000000 V"
b1000000 %#
b1000000 -#
b111100 *
b111100 X"
b111100 ]"
b111100 *#
b111100 +#
1!
#700000
0!
#725000
b1000100 +
b1000100 $#
b1000100 )#
b1000100 -
b1000100 V"
b1000100 %#
b1000100 -#
b1000000 *
b1000000 X"
b1000000 ]"
b1000000 *#
b1000000 +#
b1000000 H
b1000000 G"
b1000000 ["
b111100 ,
b111100 k
b111100 ##
b111100 G
b111100 m
b111100 Y"
b111100 J
b111100 #"
b111100 U"
b111000 U
b111000 ."
b111000 h"
b110100 >
b110100 m"
b110100 ~"
1!
#750000
0!
#775000
b1001000 +
b1001000 $#
b1001000 )#
b111000 >
b111000 m"
b111000 ~"
b111100 U
b111100 ."
b111100 h"
b1000000 J
b1000000 #"
b1000000 U"
b1000100 H
b1000100 G"
b1000100 ["
b1000000 ,
b1000000 k
b1000000 ##
b1000000 G
b1000000 m
b1000000 Y"
b1001000 -
b1001000 V"
b1001000 %#
b1001000 -#
b1000100 *
b1000100 X"
b1000100 ]"
b1000100 *#
b1000100 +#
1!
#800000
0!
#825000
b1001100 +
b1001100 $#
b1001100 )#
b1001100 -
b1001100 V"
b1001100 %#
b1001100 -#
b1001000 *
b1001000 X"
b1001000 ]"
b1001000 *#
b1001000 +#
b1001000 H
b1001000 G"
b1001000 ["
b1000100 ,
b1000100 k
b1000100 ##
b1000100 G
b1000100 m
b1000100 Y"
b1000100 J
b1000100 #"
b1000100 U"
b1000000 U
b1000000 ."
b1000000 h"
b111100 >
b111100 m"
b111100 ~"
1!
#850000
0!
#875000
b1010000 +
b1010000 $#
b1010000 )#
b1000000 >
b1000000 m"
b1000000 ~"
b1000100 U
b1000100 ."
b1000100 h"
b1001000 J
b1001000 #"
b1001000 U"
b1001100 H
b1001100 G"
b1001100 ["
b1001000 ,
b1001000 k
b1001000 ##
b1001000 G
b1001000 m
b1001000 Y"
b1010000 -
b1010000 V"
b1010000 %#
b1010000 -#
b1001100 *
b1001100 X"
b1001100 ]"
b1001100 *#
b1001100 +#
1!
#900000
0!
#925000
b1010100 +
b1010100 $#
b1010100 )#
b1010100 -
b1010100 V"
b1010100 %#
b1010100 -#
b1010000 *
b1010000 X"
b1010000 ]"
b1010000 *#
b1010000 +#
b1010000 H
b1010000 G"
b1010000 ["
b1001100 ,
b1001100 k
b1001100 ##
b1001100 G
b1001100 m
b1001100 Y"
b1001100 J
b1001100 #"
b1001100 U"
b1001000 U
b1001000 ."
b1001000 h"
b1000100 >
b1000100 m"
b1000100 ~"
1!
#950000
0!
#975000
b1011000 +
b1011000 $#
b1011000 )#
b1001000 >
b1001000 m"
b1001000 ~"
b1001100 U
b1001100 ."
b1001100 h"
b1010000 J
b1010000 #"
b1010000 U"
b1010100 H
b1010100 G"
b1010100 ["
b1010000 ,
b1010000 k
b1010000 ##
b1010000 G
b1010000 m
b1010000 Y"
b1011000 -
b1011000 V"
b1011000 %#
b1011000 -#
b1010100 *
b1010100 X"
b1010100 ]"
b1010100 *#
b1010100 +#
1!
#1000000
0!
#1025000
b1011100 +
b1011100 $#
b1011100 )#
b1011100 -
b1011100 V"
b1011100 %#
b1011100 -#
b1011000 *
b1011000 X"
b1011000 ]"
b1011000 *#
b1011000 +#
b1011000 H
b1011000 G"
b1011000 ["
b1010100 ,
b1010100 k
b1010100 ##
b1010100 G
b1010100 m
b1010100 Y"
b1010100 J
b1010100 #"
b1010100 U"
b1010000 U
b1010000 ."
b1010000 h"
b1001100 >
b1001100 m"
b1001100 ~"
1!
#1050000
0!
#1075000
b1100000 +
b1100000 $#
b1100000 )#
b1010000 >
b1010000 m"
b1010000 ~"
b1010100 U
b1010100 ."
b1010100 h"
b1011000 J
b1011000 #"
b1011000 U"
b1011100 H
b1011100 G"
b1011100 ["
b1011000 ,
b1011000 k
b1011000 ##
b1011000 G
b1011000 m
b1011000 Y"
b1100000 -
b1100000 V"
b1100000 %#
b1100000 -#
b1011100 *
b1011100 X"
b1011100 ]"
b1011100 *#
b1011100 +#
1!
#1100000
0!
#1125000
b1100100 +
b1100100 $#
b1100100 )#
b1100100 -
b1100100 V"
b1100100 %#
b1100100 -#
b1100000 *
b1100000 X"
b1100000 ]"
b1100000 *#
b1100000 +#
b1100000 H
b1100000 G"
b1100000 ["
b1011100 ,
b1011100 k
b1011100 ##
b1011100 G
b1011100 m
b1011100 Y"
b1011100 J
b1011100 #"
b1011100 U"
b1011000 U
b1011000 ."
b1011000 h"
b1010100 >
b1010100 m"
b1010100 ~"
1!
#1150000
0!
#1175000
b1101000 +
b1101000 $#
b1101000 )#
b1011000 >
b1011000 m"
b1011000 ~"
b1011100 U
b1011100 ."
b1011100 h"
b1100000 J
b1100000 #"
b1100000 U"
b1100100 H
b1100100 G"
b1100100 ["
b1100000 ,
b1100000 k
b1100000 ##
b1100000 G
b1100000 m
b1100000 Y"
b1101000 -
b1101000 V"
b1101000 %#
b1101000 -#
b1100100 *
b1100100 X"
b1100100 ]"
b1100100 *#
b1100100 +#
1!
#1200000
0!
#1225000
b1101100 +
b1101100 $#
b1101100 )#
b1101100 -
b1101100 V"
b1101100 %#
b1101100 -#
b1101000 *
b1101000 X"
b1101000 ]"
b1101000 *#
b1101000 +#
b1101000 H
b1101000 G"
b1101000 ["
b1100100 ,
b1100100 k
b1100100 ##
b1100100 G
b1100100 m
b1100100 Y"
b1100100 J
b1100100 #"
b1100100 U"
b1100000 U
b1100000 ."
b1100000 h"
b1011100 >
b1011100 m"
b1011100 ~"
1!
#1250000
0!
#1275000
b1110000 +
b1110000 $#
b1110000 )#
b1100000 >
b1100000 m"
b1100000 ~"
b1100100 U
b1100100 ."
b1100100 h"
b1101000 J
b1101000 #"
b1101000 U"
b1101100 H
b1101100 G"
b1101100 ["
b1101000 ,
b1101000 k
b1101000 ##
b1101000 G
b1101000 m
b1101000 Y"
b1110000 -
b1110000 V"
b1110000 %#
b1110000 -#
b1101100 *
b1101100 X"
b1101100 ]"
b1101100 *#
b1101100 +#
1!
#1300000
0!
#1325000
b1110100 +
b1110100 $#
b1110100 )#
b1110100 -
b1110100 V"
b1110100 %#
b1110100 -#
b1110000 *
b1110000 X"
b1110000 ]"
b1110000 *#
b1110000 +#
b1110000 H
b1110000 G"
b1110000 ["
b1101100 ,
b1101100 k
b1101100 ##
b1101100 G
b1101100 m
b1101100 Y"
b1101100 J
b1101100 #"
b1101100 U"
b1101000 U
b1101000 ."
b1101000 h"
b1100100 >
b1100100 m"
b1100100 ~"
1!
#1350000
0!
#1375000
b1111000 +
b1111000 $#
b1111000 )#
b1101000 >
b1101000 m"
b1101000 ~"
b1101100 U
b1101100 ."
b1101100 h"
b1110000 J
b1110000 #"
b1110000 U"
b1110100 H
b1110100 G"
b1110100 ["
b1110000 ,
b1110000 k
b1110000 ##
b1110000 G
b1110000 m
b1110000 Y"
b1111000 -
b1111000 V"
b1111000 %#
b1111000 -#
b1110100 *
b1110100 X"
b1110100 ]"
b1110100 *#
b1110100 +#
1!
#1400000
0!
#1425000
b1111100 +
b1111100 $#
b1111100 )#
b1111100 -
b1111100 V"
b1111100 %#
b1111100 -#
b1111000 *
b1111000 X"
b1111000 ]"
b1111000 *#
b1111000 +#
b1111000 H
b1111000 G"
b1111000 ["
b1110100 ,
b1110100 k
b1110100 ##
b1110100 G
b1110100 m
b1110100 Y"
b1110100 J
b1110100 #"
b1110100 U"
b1110000 U
b1110000 ."
b1110000 h"
b1101100 >
b1101100 m"
b1101100 ~"
1!
#1450000
0!
#1475000
b10000000 +
b10000000 $#
b10000000 )#
b1110000 >
b1110000 m"
b1110000 ~"
b1110100 U
b1110100 ."
b1110100 h"
b1111000 J
b1111000 #"
b1111000 U"
b1111100 H
b1111100 G"
b1111100 ["
b1111000 ,
b1111000 k
b1111000 ##
b1111000 G
b1111000 m
b1111000 Y"
b10000000 -
b10000000 V"
b10000000 %#
b10000000 -#
b1111100 *
b1111100 X"
b1111100 ]"
b1111100 *#
b1111100 +#
1!
#1500000
0!
#1525000
b10000100 +
b10000100 $#
b10000100 )#
b10000100 -
b10000100 V"
b10000100 %#
b10000100 -#
bx E
bx W"
bx \"
b10000000 *
b10000000 X"
b10000000 ]"
b10000000 *#
b10000000 +#
b10000000 H
b10000000 G"
b10000000 ["
b1111100 ,
b1111100 k
b1111100 ##
b1111100 G
b1111100 m
b1111100 Y"
b1111100 J
b1111100 #"
b1111100 U"
b1111000 U
b1111000 ."
b1111000 h"
b1110100 >
b1110100 m"
b1110100 ~"
1!
#1550000
0!
#1575000
x(
xC
x4
x<
x]
bx D"
bx C"
bx B"
bx 8
bzxxxxxxxx (#
xb
bx 2
bx |
x=
bzxxxxxxxx &#
bx e
bx !"
bx ~
bx }
x1
bx r
bx q
bx p
bx `"
bx a"
bx {
bx y
bx E"
bx F"
bx 5
bx n
bx J"
bx 3#
bx 2#
bx 6
bx o
bx K"
bx 1#
bx 0#
bx >"
bx ="
b1000x000 +
b1000x000 $#
b1000x000 )#
b1111000 >
b1111000 m"
b1111000 ~"
b1111100 U
b1111100 ."
b1111100 h"
b10000000 J
b10000000 #"
b10000000 U"
b10000100 H
b10000100 G"
b10000100 ["
bx I
bx z
bx H"
bx Z"
bx _"
b10000000 ,
b10000000 k
b10000000 ##
b10000000 G
b10000000 m
b10000000 Y"
b10001000 -
b10001000 V"
b10001000 %#
b10001000 -#
b10000100 *
b10000100 X"
b10000100 ]"
b10000100 *#
b10000100 +#
1!
#1600000
0!
#1625000
bx ;#
bx ;
bx {"
bx 9#
bx :#
bx `
bx ""
bx v"
bx x"
bx a
bx q"
bx 8#
b0 c
b0 5"
b0 ;"
b0 u"
b0 d
b0 4"
b0 :"
b0 p"
bx +
bx $#
bx )#
bx i
b1111 _
b1111 g
b1111 7#
b1111 j
bx f
xz"
x<"
bx 1"
bx 0"
bx -
bx V"
bx %#
bx -#
b1000x000 *
b1000x000 X"
b1000x000 ]"
b1000x000 *#
b1000x000 +#
b10001000 H
b10001000 G"
b10001000 ["
b10000100 ,
b10000100 k
b10000100 ##
b10000100 G
b10000100 m
b10000100 Y"
b10000100 J
b10000100 #"
b10000100 U"
bx M
bx &"
bx ?"
bx O"
bx L
bx h
bx P"
bx O
bx R"
bx s"
bx P
bx Q"
bx n"
bx S
bx L"
bx Q
bx ("
bx M"
bx N
bx '"
bx N"
bx K
bx $"
bx T"
b10000000 U
b10000000 ."
b10000000 h"
b1111100 >
b1111100 m"
b1111100 ~"
1!
#1650000
0!
#1675000
xt
xs
x9"
b10000000 >
b10000000 m"
b10000000 ~"
b10000100 U
b10000100 ."
b10000100 h"
bx W
bx +"
bx 3"
bx f"
bx Y
bx v
bx /"
bx Z
bx )"
bx X
bx *"
bx 2"
bx e"
bx V
bx -"
b10001000 J
b10001000 #"
b10001000 U"
bx H
bx G"
bx ["
bx ,
bx k
bx ##
b1000x000 G
b1000x000 m
b1000x000 Y"
bx *
bx X"
bx ]"
bx *#
bx +#
1!
#1700000
0!
#1725000
b0x0000x00 :
b0x0000x00 r"
b0x0000x00 w"
b0x0000x00 "#
b0x0000x00 /#
x8"
bx !#
x4#
bx G
bx m
bx Y"
bx J
bx #"
bx U"
b10001000 U
b10001000 ."
b10001000 h"
b10000100 >
b10000100 m"
b10000100 ~"
bx ?
bx 6"
bx k"
bx .#
bx @
bx 7"
bx j"
1!
#1750000
0!
#1775000
b0x000x000 :
b0x000x000 r"
b0x000x000 w"
b0x000x000 "#
b0x000x000 /#
b10001000 >
b10001000 m"
b10001000 ~"
bx U
bx ."
bx h"
1!
#1800000
0!
