$date
	Mon May 17 07:54:28 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench $end
$var reg 1 ! clk $end
$var reg 1 " rst_n $end
$var integer 32 # fp_w [31:0] $end
$scope module CPU $end
$var wire 1 $ IFID_flush $end
$var wire 32 % Imm_0 [31:0] $end
$var wire 32 & Imm_4 [31:0] $end
$var wire 1 ' PCSrc $end
$var wire 1 ! clk_i $end
$var wire 1 " rst_i $end
$var wire 1 ( zero $end
$var wire 32 ) pc_o [31:0] $end
$var wire 32 * pc_i [31:0] $end
$var wire 32 + pc_add_immediate [31:0] $end
$var wire 32 , pc_add4 [31:0] $end
$var wire 1 - ovf $end
$var wire 1 . cout $end
$var wire 1 / control_output_select $end
$var wire 1 0 branch_zero $end
$var wire 32 1 SL1_o [31:0] $end
$var wire 1 2 RegWrite $end
$var wire 32 3 RTdata_o [31:0] $end
$var wire 32 4 RSdata_o [31:0] $end
$var wire 1 5 PC_write $end
$var wire 8 6 Mux_control_o [7:0] $end
$var wire 32 7 MuxMemtoReg_o [31:0] $end
$var wire 32 8 MuxALUSrc_o [31:0] $end
$var wire 1 9 MemtoReg $end
$var wire 1 : MemWrite $end
$var wire 1 ; MemRead $end
$var wire 32 < MEMWB_pc_add4_o [31:0] $end
$var wire 5 = MEMWB_instr_11_7_o [4:0] $end
$var wire 2 > MEMWB_WB_o [1:0] $end
$var wire 32 ? MEMWB_DM_o [31:0] $end
$var wire 32 @ MEMWB_ALUresult_o [31:0] $end
$var wire 1 A Jump $end
$var wire 32 B Imm_Gen_o [31:0] $end
$var wire 32 C IF_instr [31:0] $end
$var wire 1 D IFID_write $end
$var wire 32 E IFID_pc_o [31:0] $end
$var wire 32 F IFID_pc_add4_o [31:0] $end
$var wire 32 G IFID_instr_o [31:0] $end
$var wire 32 H IDEXE_pc_add4_o [31:0] $end
$var wire 32 I IDEXE_instr_o [31:0] $end
$var wire 4 J IDEXE_instr_30_14_12_o [3:0] $end
$var wire 5 K IDEXE_instr_11_7_o [4:0] $end
$var wire 2 L IDEXE_WB_o [1:0] $end
$var wire 32 M IDEXE_RTdata_o [31:0] $end
$var wire 32 N IDEXE_RSdata_o [31:0] $end
$var wire 3 O IDEXE_Mem_o [2:0] $end
$var wire 32 P IDEXE_ImmGen_o [31:0] $end
$var wire 3 Q IDEXE_Exe_o [2:0] $end
$var wire 1 R EXEMEM_zero_o $end
$var wire 32 S EXEMEM_pc_add4_o [31:0] $end
$var wire 32 T EXEMEM_instr_o [31:0] $end
$var wire 5 U EXEMEM_instr_11_7_o [4:0] $end
$var wire 2 V EXEMEM_WB_o [1:0] $end
$var wire 32 W EXEMEM_RTdata_o [31:0] $end
$var wire 3 X EXEMEM_Mem_o [2:0] $end
$var wire 32 Y EXEMEM_ALUresult_o [31:0] $end
$var wire 32 Z DM_o [31:0] $end
$var wire 1 [ Branch $end
$var wire 32 \ ALUresult [31:0] $end
$var wire 4 ] ALU_Ctrl_o [3:0] $end
$var wire 32 ^ ALUSrc2_o [31:0] $end
$var wire 32 _ ALUSrc1_o [31:0] $end
$var wire 1 ` ALUSrc $end
$var wire 2 a ALUSelSrc2 [1:0] $end
$var wire 2 b ALUSelSrc1 [1:0] $end
$var wire 2 c ALUOp [1:0] $end
$scope module ALU_Ctrl $end
$var wire 2 d ALUOp [1:0] $end
$var wire 4 e ALU_Ctrl_o [3:0] $end
$var wire 4 f instr [3:0] $end
$var wire 3 g func3 [2:0] $end
$var reg 4 h ALU_Ctrl_o_reg [3:0] $end
$upscope $end
$scope module Branch_Adder $end
$var wire 32 i sum_o [31:0] $end
$var wire 32 j src2_i [31:0] $end
$var wire 32 k src1_i [31:0] $end
$upscope $end
$scope module Check_Equal $end
$var wire 1 " rst_n $end
$var wire 32 l src2 [31:0] $end
$var wire 32 m src1 [31:0] $end
$var reg 32 n a [31:0] $end
$var reg 32 o b [31:0] $end
$var reg 32 p result [31:0] $end
$var reg 1 0 zero $end
$upscope $end
$scope module Data_Memory $end
$var wire 1 q MemRead_i $end
$var wire 1 r MemWrite_i $end
$var wire 1 ! clk_i $end
$var wire 32 s data_o [31:0] $end
$var wire 32 t data_i [31:0] $end
$var wire 32 u addr_i [31:0] $end
$var integer 32 v i [31:0] $end
$upscope $end
$scope module Decoder $end
$var wire 7 w opcode [6:0] $end
$var wire 32 x instr_i [31:0] $end
$var wire 3 y funct3 [2:0] $end
$var wire 1 2 RegWrite $end
$var wire 1 9 MemtoReg $end
$var wire 1 : MemWrite $end
$var wire 1 ; MemRead $end
$var wire 1 A Jump $end
$var wire 3 z Instr_field [2:0] $end
$var wire 10 { Ctrl_o [9:0] $end
$var wire 1 [ Branch $end
$var wire 1 ` ALUSrc $end
$var wire 2 | ALUOp [1:0] $end
$upscope $end
$scope module EXEtoMEM $end
$var wire 1 ! clk_i $end
$var wire 1 " rst_i $end
$var wire 1 ( zero_i $end
$var wire 32 } rtdata_i [31:0] $end
$var wire 32 ~ pc_add4_i [31:0] $end
$var wire 32 !" instr_i [31:0] $end
$var wire 32 "" alu_ans_i [31:0] $end
$var wire 5 #" WBreg_i [4:0] $end
$var wire 2 $" WB_i [1:0] $end
$var wire 3 %" Mem_i [2:0] $end
$var reg 3 &" Mem_o [2:0] $end
$var reg 2 '" WB_o [1:0] $end
$var reg 5 (" WBreg_o [4:0] $end
$var reg 32 )" alu_ans_o [31:0] $end
$var reg 32 *" instr_o [31:0] $end
$var reg 32 +" pc_add4_o [31:0] $end
$var reg 32 ," rtdata_o [31:0] $end
$var reg 1 R zero_o $end
$upscope $end
$scope module FWUnit $end
$var wire 5 -" EXE_instr19_15 [4:0] $end
$var wire 5 ." EXE_instr24_20 [4:0] $end
$var wire 2 /" MEM_WBControl [1:0] $end
$var wire 5 0" MEM_instr11_7 [4:0] $end
$var wire 2 1" src1_sel_o [1:0] $end
$var wire 2 2" src2_sel_o [1:0] $end
$var wire 5 3" WB_instr11_7 [4:0] $end
$var wire 2 4" WB_Control [1:0] $end
$var wire 1 5" Regwrite $end
$var wire 1 6" MEM_Regwrite $end
$var reg 2 7" sel1_o_reg [1:0] $end
$var reg 2 8" sel2_o_reg [1:0] $end
$upscope $end
$scope module Hazard_detection_obj $end
$var wire 1 9" IDEXE_memRead $end
$var wire 5 :" IFID_regRs [4:0] $end
$var wire 5 ;" IFID_regRt [4:0] $end
$var wire 1 D IFID_write $end
$var wire 1 5 PC_write $end
$var wire 1 / control_output_select $end
$var wire 5 <" IDEXE_regRd [4:0] $end
$var reg 1 / COS_reg $end
$var reg 1 =" IFIDW_reg $end
$var reg 1 >" PCW_reg $end
$upscope $end
$scope module IDtoEXE $end
$var wire 3 ?" Exe_i [2:0] $end
$var wire 3 @" Mem_i [2:0] $end
$var wire 2 A" WB_i [1:0] $end
$var wire 5 B" WBreg_i [4:0] $end
$var wire 4 C" alu_ctrl_instr [3:0] $end
$var wire 1 ! clk_i $end
$var wire 1 " rst_i $end
$var wire 32 D" pc_add4_i [31:0] $end
$var wire 32 E" instr_i [31:0] $end
$var wire 32 F" immgen_i [31:0] $end
$var wire 32 G" data2_i [31:0] $end
$var wire 32 H" data1_i [31:0] $end
$var reg 3 I" Exe_o [2:0] $end
$var reg 3 J" Mem_o [2:0] $end
$var reg 2 K" WB_o [1:0] $end
$var reg 5 L" WBreg_o [4:0] $end
$var reg 4 M" alu_ctrl_input [3:0] $end
$var reg 32 N" data1_o [31:0] $end
$var reg 32 O" data2_o [31:0] $end
$var reg 32 P" immgen_o [31:0] $end
$var reg 32 Q" instr_o [31:0] $end
$var reg 32 R" pc_add4_o [31:0] $end
$upscope $end
$scope module IFtoID $end
$var wire 1 D IFID_write $end
$var wire 1 ! clk_i $end
$var wire 1 $ flush $end
$var wire 1 " rst_i $end
$var wire 32 S" pc_add4_i [31:0] $end
$var wire 32 T" instr_i [31:0] $end
$var wire 32 U" address_i [31:0] $end
$var reg 32 V" address_o [31:0] $end
$var reg 32 W" instr_o [31:0] $end
$var reg 32 X" pc_add4_o [31:0] $end
$upscope $end
$scope module IM $end
$var wire 32 Y" instr_o [31:0] $end
$var wire 32 Z" addr_i [31:0] $end
$var integer 32 [" i [31:0] $end
$upscope $end
$scope module ImmGen $end
$var wire 32 \" instr_i [31:0] $end
$var wire 7 ]" opcode [6:0] $end
$var wire 3 ^" func3 [2:0] $end
$var wire 32 _" Imm_Gen_o [31:0] $end
$var reg 32 `" Imm_Gen_o_reg [31:0] $end
$scope begin Btype $end
$upscope $end
$scope begin Itype $end
$upscope $end
$scope begin Jtype $end
$upscope $end
$scope begin Stype $end
$upscope $end
$upscope $end
$scope module MEMtoWB $end
$var wire 32 a" DM_i [31:0] $end
$var wire 2 b" WB_i [1:0] $end
$var wire 5 c" WBreg_i [4:0] $end
$var wire 32 d" alu_ans_i [31:0] $end
$var wire 1 ! clk_i $end
$var wire 32 e" pc_add4_i [31:0] $end
$var wire 1 " rst_i $end
$var reg 32 f" DM_o [31:0] $end
$var reg 2 g" WB_o [1:0] $end
$var reg 5 h" WBreg_o [4:0] $end
$var reg 32 i" alu_ans_o [31:0] $end
$var reg 32 j" pc_add4_o [31:0] $end
$upscope $end
$scope module MUX_ALU_src1 $end
$var wire 32 k" data0_i [31:0] $end
$var wire 32 l" data2_i [31:0] $end
$var wire 2 m" select_i [1:0] $end
$var wire 32 n" data_o [31:0] $end
$var wire 32 o" data1_i [31:0] $end
$upscope $end
$scope module MUX_ALU_src2 $end
$var wire 32 p" data2_i [31:0] $end
$var wire 2 q" select_i [1:0] $end
$var wire 32 r" data_o [31:0] $end
$var wire 32 s" data1_i [31:0] $end
$var wire 32 t" data0_i [31:0] $end
$upscope $end
$scope module Mux_ALUSrc $end
$var wire 32 u" data0_i [31:0] $end
$var wire 32 v" data1_i [31:0] $end
$var wire 1 w" select_i $end
$var wire 32 x" data_o [31:0] $end
$upscope $end
$scope module Mux_MemtoReg $end
$var wire 32 y" data0_i [31:0] $end
$var wire 32 z" data1_i [31:0] $end
$var wire 1 {" select_i $end
$var wire 32 |" data_o [31:0] $end
$upscope $end
$scope module Mux_PCSrc $end
$var wire 32 }" data1_i [31:0] $end
$var wire 1 ' select_i $end
$var wire 32 ~" data_o [31:0] $end
$var wire 32 !# data0_i [31:0] $end
$upscope $end
$scope module Mux_control $end
$var wire 32 "# data0_i [31:0] $end
$var wire 32 ## data1_i [31:0] $end
$var wire 1 / select_i $end
$var wire 32 $# data_o [31:0] $end
$upscope $end
$scope module PC $end
$var wire 1 5 PCWrite $end
$var wire 1 ! clk_i $end
$var wire 32 %# pc_i [31:0] $end
$var wire 1 " rst_i $end
$var reg 32 &# pc_o [31:0] $end
$upscope $end
$scope module PC_plus_4_Adder $end
$var wire 32 '# src1_i [31:0] $end
$var wire 32 (# src2_i [31:0] $end
$var wire 32 )# sum_o [31:0] $end
$upscope $end
$scope module RF $end
$var wire 5 *# RDaddr_i [4:0] $end
$var wire 32 +# RDdata_i [31:0] $end
$var wire 5 ,# RSaddr_i [4:0] $end
$var wire 32 -# RSdata_o [31:0] $end
$var wire 5 .# RTaddr_i [4:0] $end
$var wire 32 /# RTdata_o [31:0] $end
$var wire 1 0# RegWrite_i $end
$var wire 1 ! clk_i $end
$var wire 1 " rst_i $end
$upscope $end
$scope module SL1 $end
$var wire 32 1# data_i [31:0] $end
$var wire 32 2# data_o [31:0] $end
$upscope $end
$scope module alu $end
$var wire 4 3# ALU_control [3:0] $end
$var wire 1 " rst_n $end
$var wire 32 4# src1 [31:0] $end
$var wire 32 5# src2 [31:0] $end
$var reg 32 6# a [31:0] $end
$var reg 32 7# b [31:0] $end
$var reg 1 . cout $end
$var reg 1 - overflow $end
$var reg 32 8# result [31:0] $end
$var reg 1 ( zero $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 8#
bx 7#
bx 6#
bx 5#
bx 4#
bx 3#
bx0 2#
bx 1#
x0#
bx /#
bx .#
bx -#
bx ,#
bx +#
bx *#
bx )#
b100 (#
bx '#
bx &#
bx %#
b0xxxxxxxxx $#
b0 ##
b0xxxxxxxxx "#
bx !#
bx ~"
bx }"
bx |"
x{"
bx z"
bx y"
bx x"
xw"
bx v"
bx u"
bx t"
bx s"
bx r"
bx q"
bx p"
bx o"
bx n"
bx m"
bx l"
bx k"
bx j"
bx i"
bx h"
bx g"
bx f"
bx e"
bx d"
bx c"
bx b"
bx a"
bx `"
bx _"
bx ^"
bx ]"
bx \"
b100000 ["
bx Z"
bx Y"
bx X"
bx W"
bx V"
bx U"
bx T"
bx S"
bx R"
bx Q"
bx P"
bx O"
bx N"
bx M"
bx L"
bx K"
bx J"
bx I"
bx H"
bx G"
bx F"
bx E"
bx D"
bx C"
bx B"
bx A"
bx @"
bx ?"
x>"
x="
bx <"
bx ;"
bx :"
x9"
bx 8"
bx 7"
x6"
x5"
bx 4"
bx 3"
bx 2"
bx 1"
bx 0"
bx /"
bx ."
bx -"
bx ,"
bx +"
bx *"
bx )"
bx ("
bx '"
bx &"
bx %"
bx $"
bx #"
b0 ""
bx !"
bx ~
bx }
bx |
bx {
bx z
bx y
bx x
bx w
b10000000 v
bx u
bx t
bx s
xr
xq
bx p
bx o
bx n
bx m
bx l
bx k
bx0 j
bx i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
bx a
x`
bx _
bx ^
bx ]
b0 \
x[
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
xR
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
xD
bx C
bx B
xA
bx @
bx ?
bx >
bx =
bx <
x;
x:
x9
bx 8
bx 7
bx 6
x5
bx 4
bx 3
x2
bx0 1
00
x/
0.
0-
bx ,
bx +
bx *
bx )
1(
0'
b100 &
b0 %
z$
b10000000000000000000000000000011 #
0"
0!
$end
#25000
b111 ?"
1`
12
b11 c
b11 |
0A
0:
0[
b10 A"
b0 @"
b11100010 6
b11100010 $#
09
b11100010 "#
0;
b10100011 {
b1 z
0'
10
b0 p
b0 o
b0 n
b0 +
b0 i
b0 }"
b0 1
b0 j
b0 2#
b0 7#
b0 6#
b0 ^
b0 }
b0 r"
b0 5#
b100 *
b100 ~"
b100 %#
b0 ]"
b0 ^"
b0 y
b0 w
b0 B"
b0 C"
b0 3
b0 l
b0 G"
b0 /#
b0 .#
b0 4
b0 m
b0 H"
b0 -#
b0 ,#
b0 ;"
b0 :"
b0 B
b0 F"
b0 _"
b0 `"
b0 1#
0/
1D
1="
15
1>"
b0 g
b10 ]
b10 e
b10 3#
b10 h
b0 8
b0 t"
b0 x"
b0 _
b0 n"
b0 4#
b0 d
0w"
09"
b0 ."
b0 -"
b0 Z
b0 s
b0 a"
0r
0q
06"
b0 a
b0 2"
b0 8"
b0 q"
b0 b
b0 1"
b0 7"
b0 m"
b0 7
b0 o"
b0 s"
b0 |"
b0 +#
05"
0{"
00#
b100 ,
b100 S"
b100 !#
b100 )#
b100000000000000011101111 C
b100000000000000011101111 T"
b100000000000000011101111 Y"
b0 )
b0 U"
b0 Z"
b0 &#
b0 '#
b0 F
b0 D"
b0 X"
b0 G
b0 x
b0 E"
b0 W"
b0 \"
b0 E
b0 k
b0 V"
b0 H
b0 ~
b0 R"
b0 K
b0 #"
b0 <"
b0 L"
b0 J
b0 f
b0 M"
b0 P
b0 P"
b0 v"
b0 M
b0 O"
b0 u"
b0 N
b0 N"
b0 k"
b0 Q
b0 I"
b0 O
b0 %"
b0 J"
b0 L
b0 $"
b0 K"
b0 I
b0 !"
b0 Q"
b0 S
b0 +"
b0 e"
b0 U
b0 ("
b0 0"
b0 c"
b0 W
b0 t
b0 ,"
b0 Y
b0 u
b0 )"
b0 d"
b0 l"
b0 p"
0R
b0 X
b0 &"
b0 V
b0 '"
b0 /"
b0 b"
b0 T
b0 *"
b0 <
b0 j"
b0 =
b0 3"
b0 h"
b0 *#
b0 @
b0 i"
b0 z"
b0 ?
b0 f"
b0 y"
b0 >
b0 4"
b0 g"
1!
#50000
0!
1"
#75000
b10 A"
b0 ?"
b10 6
1A
b100000010 $#
0`
12
b100000010 "#
b0 c
b0 |
b100100000 {
b10000 +
b10000 i
b10000 }"
b10000 1
b10000 j
b10000 2#
b100 z
b1000 B
b1000 F"
b1000 _"
b1000 `"
b1000 1#
b11 d
1w"
b1101111 ]"
b1101111 w
b1 B"
b1000 .#
b1000 ;"
b1000 *
b1000 ~"
b1000 %#
1R
b111 Q
b111 I"
b10 L
b10 $"
b10 K"
b100 F
b100 D"
b100 X"
b100000000000000011101111 G
b100000000000000011101111 x
b100000000000000011101111 E"
b100000000000000011101111 W"
b100000000000000011101111 \"
b1000 ,
b1000 S"
b1000 !#
b1000 )#
b10100100000001000010011 C
b10100100000001000010011 T"
b10100100000001000010011 Y"
b100 )
b100 U"
b100 Z"
b100 &#
b100 '#
1!
#100000
0!
#125000
b111 ?"
b11100010 6
b11100010 $#
0A
1`
b11100010 "#
b11 c
b11 |
b10100011 {
b1 z
b1010 1
b1010 j
b1010 2#
b10 b
b10 1"
b10 7"
b10 m"
b1100 *
b1100 ~"
b1100 %#
b10011 ]"
b10011 w
b100 B"
b101 .#
b100 ,#
b101 ;"
b100 :"
b101 B
b101 F"
b101 _"
b101 `"
b101 1#
b0 d
0w"
b1000 ."
16"
b1100 ,
b1100 S"
b1100 !#
b1100 )#
b10100011000000110010011 C
b10100011000000110010011 T"
b10100011000000110010011 Y"
b1000 )
b1000 U"
b1000 Z"
b1000 &#
b1000 '#
b1000 F
b1000 D"
b1000 X"
b10100100000001000010011 G
b10100100000001000010011 x
b10100100000001000010011 E"
b10100100000001000010011 W"
b10100100000001000010011 \"
b1110 +
b1110 i
b1110 }"
b100 E
b100 k
b100 V"
b100 H
b100 ~
b100 R"
b1 K
b1 #"
b1 <"
b1 L"
b1000 P
b1000 P"
b1000 v"
b0 Q
b0 I"
b100000000000000011101111 I
b100000000000000011101111 !"
b100000000000000011101111 Q"
b10 V
b10 '"
b10 /"
b10 b"
1!
#150000
0!
#175000
0(
b101 \
b101 ""
b101 8#
b101 7#
b101 ^
b101 }
b101 r"
b101 5#
b101 8
b101 t"
b101 x"
15"
10#
b0 b
b0 1"
b0 7"
b0 m"
b11 d
1w"
b101 ."
b100 -"
b11 B"
b11 ,#
b11 :"
b10000 *
b10000 ~"
b10000 %#
b10 >
b10 4"
b10 g"
b100 S
b100 +"
b100 e"
b1 U
b1 ("
b1 0"
b1 c"
b100000000000000011101111 T
b100000000000000011101111 *"
b1000 H
b1000 ~
b1000 R"
b100 K
b100 #"
b100 <"
b100 L"
b101 P
b101 P"
b101 v"
b111 Q
b111 I"
b10100100000001000010011 I
b10100100000001000010011 !"
b10100100000001000010011 Q"
b1100 F
b1100 D"
b1100 X"
b10100011000000110010011 G
b10100011000000110010011 x
b10100011000000110010011 E"
b10100011000000110010011 W"
b10100011000000110010011 \"
b10010 +
b10010 i
b10010 }"
b1000 E
b1000 k
b1000 V"
b10000 ,
b10000 S"
b10000 !#
b10000 )#
b0 C
b0 T"
b0 Y"
b1100 )
b1100 U"
b1100 Z"
b1100 &#
b1100 '#
1!
#200000
0!
#225000
b101 \
b101 ""
b101 8#
b0 6#
b0 1
b0 j
b0 2#
b0 _
b0 n"
b0 4#
b10100 *
b10100 ~"
b10100 %#
b0 ]"
b0 w
b0 B"
b0 .#
b0 ,#
b0 ;"
b0 :"
b0 B
b0 F"
b0 _"
b0 `"
b0 1#
b11 -"
b0 b
b0 1"
b0 7"
b0 m"
b10100 ,
b10100 S"
b10100 !#
b10100 )#
b10000 )
b10000 U"
b10000 Z"
b10000 &#
b10000 '#
b10000 F
b10000 D"
b10000 X"
b0 G
b0 x
b0 E"
b0 W"
b0 \"
b1100 +
b1100 i
b1100 }"
b1100 E
b1100 k
b1100 V"
b1100 H
b1100 ~
b1100 R"
b11 K
b11 #"
b11 <"
b11 L"
b10100011000000110010011 I
b10100011000000110010011 !"
b10100011000000110010011 Q"
b1000 S
b1000 +"
b1000 e"
b100 U
b100 ("
b100 0"
b100 c"
b101 W
b101 t
b101 ,"
b101 Y
b101 u
b101 )"
b101 d"
b101 l"
b101 p"
0R
b10100100000001000010011 T
b10100100000001000010011 *"
b100 <
b100 j"
b1 =
b1 3"
b1 h"
b1 *#
1!
#250000
0!
#275000
1(
b0 \
b0 ""
b0 8#
b0 7#
b0 ^
b0 }
b0 r"
b0 5#
b0 8
b0 t"
b0 x"
b0 ."
b0 -"
b11000 *
b11000 ~"
b11000 %#
b1000 <
b1000 j"
b100 =
b100 3"
b100 h"
b100 *#
b101 @
b101 i"
b101 z"
b1100 S
b1100 +"
b1100 e"
b11 U
b11 ("
b11 0"
b11 c"
b10100011000000110010011 T
b10100011000000110010011 *"
b10000 H
b10000 ~
b10000 R"
b0 K
b0 #"
b0 <"
b0 L"
b0 P
b0 P"
b0 v"
b0 I
b0 !"
b0 Q"
b10100 F
b10100 D"
b10100 X"
b10000 +
b10000 i
b10000 }"
b10000 E
b10000 k
b10000 V"
b11000 ,
b11000 S"
b11000 !#
b11000 )#
b10100 )
b10100 U"
b10100 Z"
b10100 &#
b10100 '#
1!
#300000
0!
#325000
b11100 *
b11100 ~"
b11100 %#
b10 a
b10 2"
b10 8"
b10 q"
b10 b
b10 1"
b10 7"
b10 m"
b11100 ,
b11100 S"
b11100 !#
b11100 )#
b11000 )
b11000 U"
b11000 Z"
b11000 &#
b11000 '#
b11000 F
b11000 D"
b11000 X"
b10100 +
b10100 i
b10100 }"
b10100 E
b10100 k
b10100 V"
b10100 H
b10100 ~
b10100 R"
b10000 S
b10000 +"
b10000 e"
b0 U
b0 ("
b0 0"
b0 c"
b0 W
b0 t
b0 ,"
b0 Y
b0 u
b0 )"
b0 d"
b0 l"
b0 p"
1R
b0 T
b0 *"
b1100 <
b1100 j"
b11 =
b11 3"
b11 h"
b11 *#
1!
#350000
0!
#375000
b100000 *
b100000 ~"
b100000 %#
b10000 <
b10000 j"
b0 =
b0 3"
b0 h"
b0 *#
b0 @
b0 i"
b0 z"
b10100 S
b10100 +"
b10100 e"
b11000 H
b11000 ~
b11000 R"
b11100 F
b11100 D"
b11100 X"
b11000 +
b11000 i
b11000 }"
b11000 E
b11000 k
b11000 V"
b100000 ,
b100000 S"
b100000 !#
b100000 )#
b11100 )
b11100 U"
b11100 Z"
b11100 &#
b11100 '#
1!
#400000
0!
#425000
b100100 *
b100100 ~"
b100100 %#
b100100 ,
b100100 S"
b100100 !#
b100100 )#
b100000 )
b100000 U"
b100000 Z"
b100000 &#
b100000 '#
b100000 F
b100000 D"
b100000 X"
b11100 +
b11100 i
b11100 }"
b11100 E
b11100 k
b11100 V"
b11100 H
b11100 ~
b11100 R"
b11000 S
b11000 +"
b11000 e"
b10100 <
b10100 j"
1!
#450000
0!
#475000
b101000 *
b101000 ~"
b101000 %#
b11000 <
b11000 j"
b11100 S
b11100 +"
b11100 e"
b100000 H
b100000 ~
b100000 R"
b100100 F
b100100 D"
b100100 X"
b100000 +
b100000 i
b100000 }"
b100000 E
b100000 k
b100000 V"
b101000 ,
b101000 S"
b101000 !#
b101000 )#
b100100 )
b100100 U"
b100100 Z"
b100100 &#
b100100 '#
1!
#500000
0!
#525000
b101100 *
b101100 ~"
b101100 %#
b101100 ,
b101100 S"
b101100 !#
b101100 )#
b101000 )
b101000 U"
b101000 Z"
b101000 &#
b101000 '#
b101000 F
b101000 D"
b101000 X"
b100100 +
b100100 i
b100100 }"
b100100 E
b100100 k
b100100 V"
b100100 H
b100100 ~
b100100 R"
b100000 S
b100000 +"
b100000 e"
b11100 <
b11100 j"
1!
#550000
0!
#575000
b110000 *
b110000 ~"
b110000 %#
b100000 <
b100000 j"
b100100 S
b100100 +"
b100100 e"
b101000 H
b101000 ~
b101000 R"
b101100 F
b101100 D"
b101100 X"
b101000 +
b101000 i
b101000 }"
b101000 E
b101000 k
b101000 V"
b110000 ,
b110000 S"
b110000 !#
b110000 )#
b101100 )
b101100 U"
b101100 Z"
b101100 &#
b101100 '#
1!
#600000
0!
#625000
b110100 *
b110100 ~"
b110100 %#
b110100 ,
b110100 S"
b110100 !#
b110100 )#
b110000 )
b110000 U"
b110000 Z"
b110000 &#
b110000 '#
b110000 F
b110000 D"
b110000 X"
b101100 +
b101100 i
b101100 }"
b101100 E
b101100 k
b101100 V"
b101100 H
b101100 ~
b101100 R"
b101000 S
b101000 +"
b101000 e"
b100100 <
b100100 j"
1!
#650000
0!
#675000
b111000 *
b111000 ~"
b111000 %#
b101000 <
b101000 j"
b101100 S
b101100 +"
b101100 e"
b110000 H
b110000 ~
b110000 R"
b110100 F
b110100 D"
b110100 X"
b110000 +
b110000 i
b110000 }"
b110000 E
b110000 k
b110000 V"
b111000 ,
b111000 S"
b111000 !#
b111000 )#
b110100 )
b110100 U"
b110100 Z"
b110100 &#
b110100 '#
1!
#700000
0!
#725000
b111100 *
b111100 ~"
b111100 %#
b111100 ,
b111100 S"
b111100 !#
b111100 )#
b111000 )
b111000 U"
b111000 Z"
b111000 &#
b111000 '#
b111000 F
b111000 D"
b111000 X"
b110100 +
b110100 i
b110100 }"
b110100 E
b110100 k
b110100 V"
b110100 H
b110100 ~
b110100 R"
b110000 S
b110000 +"
b110000 e"
b101100 <
b101100 j"
1!
#750000
0!
#775000
b1000000 *
b1000000 ~"
b1000000 %#
b110000 <
b110000 j"
b110100 S
b110100 +"
b110100 e"
b111000 H
b111000 ~
b111000 R"
b111100 F
b111100 D"
b111100 X"
b111000 +
b111000 i
b111000 }"
b111000 E
b111000 k
b111000 V"
b1000000 ,
b1000000 S"
b1000000 !#
b1000000 )#
b111100 )
b111100 U"
b111100 Z"
b111100 &#
b111100 '#
1!
#800000
0!
#825000
b1000100 *
b1000100 ~"
b1000100 %#
b1000100 ,
b1000100 S"
b1000100 !#
b1000100 )#
b1000000 )
b1000000 U"
b1000000 Z"
b1000000 &#
b1000000 '#
b1000000 F
b1000000 D"
b1000000 X"
b111100 +
b111100 i
b111100 }"
b111100 E
b111100 k
b111100 V"
b111100 H
b111100 ~
b111100 R"
b111000 S
b111000 +"
b111000 e"
b110100 <
b110100 j"
1!
#850000
0!
#875000
b1001000 *
b1001000 ~"
b1001000 %#
b111000 <
b111000 j"
b111100 S
b111100 +"
b111100 e"
b1000000 H
b1000000 ~
b1000000 R"
b1000100 F
b1000100 D"
b1000100 X"
b1000000 +
b1000000 i
b1000000 }"
b1000000 E
b1000000 k
b1000000 V"
b1001000 ,
b1001000 S"
b1001000 !#
b1001000 )#
b1000100 )
b1000100 U"
b1000100 Z"
b1000100 &#
b1000100 '#
1!
#900000
0!
#925000
b1001100 *
b1001100 ~"
b1001100 %#
b1001100 ,
b1001100 S"
b1001100 !#
b1001100 )#
b1001000 )
b1001000 U"
b1001000 Z"
b1001000 &#
b1001000 '#
b1001000 F
b1001000 D"
b1001000 X"
b1000100 +
b1000100 i
b1000100 }"
b1000100 E
b1000100 k
b1000100 V"
b1000100 H
b1000100 ~
b1000100 R"
b1000000 S
b1000000 +"
b1000000 e"
b111100 <
b111100 j"
1!
#950000
0!
#975000
b1010000 *
b1010000 ~"
b1010000 %#
b1000000 <
b1000000 j"
b1000100 S
b1000100 +"
b1000100 e"
b1001000 H
b1001000 ~
b1001000 R"
b1001100 F
b1001100 D"
b1001100 X"
b1001000 +
b1001000 i
b1001000 }"
b1001000 E
b1001000 k
b1001000 V"
b1010000 ,
b1010000 S"
b1010000 !#
b1010000 )#
b1001100 )
b1001100 U"
b1001100 Z"
b1001100 &#
b1001100 '#
1!
#1000000
0!
#1025000
b1010100 *
b1010100 ~"
b1010100 %#
b1010100 ,
b1010100 S"
b1010100 !#
b1010100 )#
b1010000 )
b1010000 U"
b1010000 Z"
b1010000 &#
b1010000 '#
b1010000 F
b1010000 D"
b1010000 X"
b1001100 +
b1001100 i
b1001100 }"
b1001100 E
b1001100 k
b1001100 V"
b1001100 H
b1001100 ~
b1001100 R"
b1001000 S
b1001000 +"
b1001000 e"
b1000100 <
b1000100 j"
1!
#1050000
0!
#1075000
b1011000 *
b1011000 ~"
b1011000 %#
b1001000 <
b1001000 j"
b1001100 S
b1001100 +"
b1001100 e"
b1010000 H
b1010000 ~
b1010000 R"
b1010100 F
b1010100 D"
b1010100 X"
b1010000 +
b1010000 i
b1010000 }"
b1010000 E
b1010000 k
b1010000 V"
b1011000 ,
b1011000 S"
b1011000 !#
b1011000 )#
b1010100 )
b1010100 U"
b1010100 Z"
b1010100 &#
b1010100 '#
1!
#1100000
0!
#1125000
b1011100 *
b1011100 ~"
b1011100 %#
b1011100 ,
b1011100 S"
b1011100 !#
b1011100 )#
b1011000 )
b1011000 U"
b1011000 Z"
b1011000 &#
b1011000 '#
b1011000 F
b1011000 D"
b1011000 X"
b1010100 +
b1010100 i
b1010100 }"
b1010100 E
b1010100 k
b1010100 V"
b1010100 H
b1010100 ~
b1010100 R"
b1010000 S
b1010000 +"
b1010000 e"
b1001100 <
b1001100 j"
1!
#1150000
0!
#1175000
b1100000 *
b1100000 ~"
b1100000 %#
b1010000 <
b1010000 j"
b1010100 S
b1010100 +"
b1010100 e"
b1011000 H
b1011000 ~
b1011000 R"
b1011100 F
b1011100 D"
b1011100 X"
b1011000 +
b1011000 i
b1011000 }"
b1011000 E
b1011000 k
b1011000 V"
b1100000 ,
b1100000 S"
b1100000 !#
b1100000 )#
b1011100 )
b1011100 U"
b1011100 Z"
b1011100 &#
b1011100 '#
1!
#1200000
0!
#1225000
b1100100 *
b1100100 ~"
b1100100 %#
b1100100 ,
b1100100 S"
b1100100 !#
b1100100 )#
b1100000 )
b1100000 U"
b1100000 Z"
b1100000 &#
b1100000 '#
b1100000 F
b1100000 D"
b1100000 X"
b1011100 +
b1011100 i
b1011100 }"
b1011100 E
b1011100 k
b1011100 V"
b1011100 H
b1011100 ~
b1011100 R"
b1011000 S
b1011000 +"
b1011000 e"
b1010100 <
b1010100 j"
1!
#1250000
0!
#1275000
b1101000 *
b1101000 ~"
b1101000 %#
b1011000 <
b1011000 j"
b1011100 S
b1011100 +"
b1011100 e"
b1100000 H
b1100000 ~
b1100000 R"
b1100100 F
b1100100 D"
b1100100 X"
b1100000 +
b1100000 i
b1100000 }"
b1100000 E
b1100000 k
b1100000 V"
b1101000 ,
b1101000 S"
b1101000 !#
b1101000 )#
b1100100 )
b1100100 U"
b1100100 Z"
b1100100 &#
b1100100 '#
1!
#1300000
0!
#1325000
b1101100 *
b1101100 ~"
b1101100 %#
b1101100 ,
b1101100 S"
b1101100 !#
b1101100 )#
b1101000 )
b1101000 U"
b1101000 Z"
b1101000 &#
b1101000 '#
b1101000 F
b1101000 D"
b1101000 X"
b1100100 +
b1100100 i
b1100100 }"
b1100100 E
b1100100 k
b1100100 V"
b1100100 H
b1100100 ~
b1100100 R"
b1100000 S
b1100000 +"
b1100000 e"
b1011100 <
b1011100 j"
1!
#1350000
0!
#1375000
b1110000 *
b1110000 ~"
b1110000 %#
b1100000 <
b1100000 j"
b1100100 S
b1100100 +"
b1100100 e"
b1101000 H
b1101000 ~
b1101000 R"
b1101100 F
b1101100 D"
b1101100 X"
b1101000 +
b1101000 i
b1101000 }"
b1101000 E
b1101000 k
b1101000 V"
b1110000 ,
b1110000 S"
b1110000 !#
b1110000 )#
b1101100 )
b1101100 U"
b1101100 Z"
b1101100 &#
b1101100 '#
1!
#1400000
0!
#1425000
b1110100 *
b1110100 ~"
b1110100 %#
b1110100 ,
b1110100 S"
b1110100 !#
b1110100 )#
b1110000 )
b1110000 U"
b1110000 Z"
b1110000 &#
b1110000 '#
b1110000 F
b1110000 D"
b1110000 X"
b1101100 +
b1101100 i
b1101100 }"
b1101100 E
b1101100 k
b1101100 V"
b1101100 H
b1101100 ~
b1101100 R"
b1101000 S
b1101000 +"
b1101000 e"
b1100100 <
b1100100 j"
1!
#1450000
0!
#1475000
b1111000 *
b1111000 ~"
b1111000 %#
b1101000 <
b1101000 j"
b1101100 S
b1101100 +"
b1101100 e"
b1110000 H
b1110000 ~
b1110000 R"
b1110100 F
b1110100 D"
b1110100 X"
b1110000 +
b1110000 i
b1110000 }"
b1110000 E
b1110000 k
b1110000 V"
b1111000 ,
b1111000 S"
b1111000 !#
b1111000 )#
b1110100 )
b1110100 U"
b1110100 Z"
b1110100 &#
b1110100 '#
1!
#1500000
0!
#1525000
b1111100 *
b1111100 ~"
b1111100 %#
b1111100 ,
b1111100 S"
b1111100 !#
b1111100 )#
b1111000 )
b1111000 U"
b1111000 Z"
b1111000 &#
b1111000 '#
b1111000 F
b1111000 D"
b1111000 X"
b1110100 +
b1110100 i
b1110100 }"
b1110100 E
b1110100 k
b1110100 V"
b1110100 H
b1110100 ~
b1110100 R"
b1110000 S
b1110000 +"
b1110000 e"
b1101100 <
b1101100 j"
1!
#1550000
0!
#1575000
b10000000 *
b10000000 ~"
b10000000 %#
b1110000 <
b1110000 j"
b1110100 S
b1110100 +"
b1110100 e"
b1111000 H
b1111000 ~
b1111000 R"
b1111100 F
b1111100 D"
b1111100 X"
b1111000 +
b1111000 i
b1111000 }"
b1111000 E
b1111000 k
b1111000 V"
b10000000 ,
b10000000 S"
b10000000 !#
b10000000 )#
b1111100 )
b1111100 U"
b1111100 Z"
b1111100 &#
b1111100 '#
1!
#1600000
0!
#1625000
b10000100 *
b10000100 ~"
b10000100 %#
b10000100 ,
b10000100 S"
b10000100 !#
b10000100 )#
bx C
bx T"
bx Y"
b10000000 )
b10000000 U"
b10000000 Z"
b10000000 &#
b10000000 '#
b10000000 F
b10000000 D"
b10000000 X"
b1111100 +
b1111100 i
b1111100 }"
b1111100 E
b1111100 k
b1111100 V"
b1111100 H
b1111100 ~
b1111100 R"
b1111000 S
b1111000 +"
b1111000 e"
b1110100 <
b1110100 j"
1!
#1650000
0!
#1675000
x'
bx A"
bx @"
bx ?"
xA
x2
x:
x[
bx 6
b0xxxxxxxxx $#
x`
x9
x;
b0xxxxxxxxx "#
bx c
bx |
bx {
bx z
x0
bx p
bx o
bx n
bx ]"
bx ^"
bx y
bx w
bx B"
bx C"
bx 3
bx l
bx G"
bx /#
bx .#
bx 4
bx m
bx H"
bx -#
bx ,#
bx ;"
bx :"
b1000x000 *
b1000x000 ~"
b1000x000 %#
b1111000 <
b1111000 j"
b1111100 S
b1111100 +"
b1111100 e"
b10000000 H
b10000000 ~
b10000000 R"
b10000100 F
b10000100 D"
b10000100 X"
bx G
bx x
bx E"
bx W"
bx \"
b10000000 +
b10000000 i
b10000000 }"
b10000000 E
b10000000 k
b10000000 V"
b10001000 ,
b10001000 S"
b10001000 !#
b10001000 )#
b10000100 )
b10000100 U"
b10000100 Z"
b10000100 &#
b10000100 '#
1!
#1700000
0!
#1725000
bx 7#
bx 6#
bx ^
bx }
bx r"
bx 5#
bx _
bx n"
bx 4#
bx 8
bx t"
bx x"
b0 a
b0 2"
b0 8"
b0 q"
b0 b
b0 1"
b0 7"
b0 m"
bx *
bx ~"
bx %#
bx g
b1111 ]
b1111 e
b1111 3#
b1111 h
bx d
xw"
x9"
bx ."
bx -"
bx ,
bx S"
bx !#
bx )#
b1000x000 )
b1000x000 U"
b1000x000 Z"
b1000x000 &#
b1000x000 '#
b10001000 F
b10001000 D"
b10001000 X"
b10000100 +
b10000100 i
b10000100 }"
b10000100 E
b10000100 k
b10000100 V"
b10000100 H
b10000100 ~
b10000100 R"
bx K
bx #"
bx <"
bx L"
bx J
bx f
bx M"
bx M
bx O"
bx u"
bx N
bx N"
bx k"
bx Q
bx I"
bx O
bx %"
bx J"
bx L
bx $"
bx K"
bx I
bx !"
bx Q"
b10000000 S
b10000000 +"
b10000000 e"
b1111100 <
b1111100 j"
1!
#1750000
0!
#1775000
xr
xq
x6"
b10000000 <
b10000000 j"
b10000100 S
b10000100 +"
b10000100 e"
bx U
bx ("
bx 0"
bx c"
bx W
bx t
bx ,"
bx X
bx &"
bx V
bx '"
bx /"
bx b"
bx T
bx *"
b10001000 H
b10001000 ~
b10001000 R"
bx F
bx D"
bx X"
bx +
bx i
bx }"
b1000x000 E
b1000x000 k
b1000x000 V"
bx )
bx U"
bx Z"
bx &#
bx '#
1!
#1800000
0!
